# Pre Processor

snippet inc "#include" b
#include <${1:iostream}>$0
endsnippet

snippet incl "#include" b
#include "${1:stdio.h}"$0
endsnippet

snippet def "#define" b
#define ${1:FOO}
endsnippet

snippet guard "Include guard" b
#ifndef ${1:__`!v toupper(expand('%:t:r'))`_`!v toupper(expand('%:t:e'))`__}
#define $1

${0:${VISUAL}}

#endif /* $1 */
endsnippet

# Documentation

snippet hdoxy "Doxygen file header docstring" b
/**
 * \file `!v expand('%:t')`
 * \brief $1
 */
$0
endsnippet

snippet doxy "Doxygen function docstring" b
/**
 * \brief $1
 */
endsnippet

# Language

snippet main "int main(int argc, char **argv)" b
int main(int argc, char **argv) {
  ${1:printf("Hello, World!\n");}
  return 0;
}
endsnippet

snippet fun "void function() {}" b
${2:void} ${1:name}($3) {
  ${4:${VISUAL}}
}$0
endsnippet

snippet if "if (condition) {}"
if (${1:/* condition */}) {
  ${2:${VISUAL}}
}$0
endsnippet

snippet else "else {}"
else {
  ${1:${VISUAL}}
}$0
endsnippet

snippet for "for (condition) {}"
for (int ${1:i} = 0; $1 < ${2:n}; $1++) {
  ${3:${VISUAL}}
}$0
endsnippet

snippet while "while (condition) {}"
while (${1:/* condition */}) {
  ${2:${VISUAL}}
}$0
endsnippet

snippet do "do {} while (condition);"
do {
  ${2:${VISUAL}}
} while (${1:/* condition */});$0
endsnippet

snippet switch "switch (condition) {}"
switch (${1:/* condition */}) {
$3
}$0
endsnippet

snippet case "case SOMETHING: break;"
case ${1:0}:
  $2
  break;$0
endsnippet
